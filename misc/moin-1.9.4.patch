diff -up MoinMoin/auth/__init__.py.orig MoinMoin/auth/__init__.py
--- MoinMoin/auth/__init__.py.orig	2012-03-13 01:12:27.725815399 +0200
+++ MoinMoin/auth/__init__.py	2012-03-13 01:13:35.365909957 +0200
@@ -362,7 +362,7 @@ class GivenAuth(BaseAuth):
             auth_username = self.transform_username(auth_username)
             logging.debug("auth_username (after decode/transform) = %r" % auth_username)
             u = user.User(request, auth_username=auth_username,
-                          auth_method=self.name, auth_attribs=('name', 'password'))
+                          auth_method=self.name, auth_attribs=('name'))
 
         logging.debug("u: %r" % u)
         if u and self.autocreate:
diff -up MoinMoin/Page.py.orig MoinMoin/Page.py
--- MoinMoin/Page.py.orig	2012-03-13 01:12:35.665826503 +0200
+++ MoinMoin/Page.py	2012-03-13 01:13:35.365909957 +0200
@@ -108,8 +108,7 @@ class ItemCache:
             (for 'meta') or the complete cache ('pagelists').
             @param request: the request object
         """
-        from MoinMoin.logfile import editlog
-        elog = editlog.EditLog(request)
+        elog = request.editlog
         old_pos = self.log_pos
         new_pos, items = elog.news(old_pos)
         if items:
diff -up MoinMoin/theme/__init__.py.orig MoinMoin/theme/__init__.py
--- MoinMoin/theme/__init__.py.orig	2012-02-07 23:36:48.000000000 +0200
+++ MoinMoin/theme/__init__.py	2012-03-13 01:13:35.375909978 +0200
@@ -48,6 +48,7 @@ class ThemeBase:
         'diff':        (_("Diffs"),               "moin-diff.png",   15, 11),
         'info':        (_("Info"),                "moin-info.png",   12, 11),
         'edit':        (_("Edit"),                "moin-edit.png",   12, 12),
+        'formedit':    (_("FormEdit"),            "moin-news.png",     12, 12),
         'unsubscribe': (_("Unsubscribe"),         "moin-unsubscribe.png", 14, 10),
         'subscribe':   (_("Subscribe"),           "moin-subscribe.png", 14, 10),
         'raw':         (_("Raw"),                 "moin-raw.png",    12, 13),
diff -up MoinMoin/theme/modernized.py.orig MoinMoin/theme/modernized.py
--- MoinMoin/theme/modernized.py.orig	2012-03-13 01:13:19.475887747 +0200
+++ MoinMoin/theme/modernized.py	2012-03-13 01:13:35.365909957 +0200
@@ -20,6 +20,8 @@ class Theme(ThemeBase):
         # FileAttach
         'attach':     ("%(attach_count)s",       "moin-attach.png",   16, 16),
         'info':       ("[INFO]",                 "moin-info.png",     16, 16),
+        'edit':       (_("Edit"),                "moin-edit.png",     12, 12),
+        'formedit':   (_("FormEdit"),            "moin-news.png",     12, 12),
         'attachimg':  (_("[ATTACH]"),            "attach.png",        32, 32),
         # RecentChanges
         'rss':        (_("[RSS]"),               "moin-rss.png",      16, 16),
diff -up MoinMoin/user.py.orig MoinMoin/user.py
--- MoinMoin/user.py.orig	2012-02-07 23:36:48.000000000 +0200
+++ MoinMoin/user.py	2012-03-13 01:13:35.365909957 +0200
@@ -161,9 +161,9 @@ def encodePassword(pwd, salt=None):
         salt = random_string(20)
     assert isinstance(salt, str)
     hash = hash_new('sha1', pwd)
-    hash.update(salt)
+    #hash.update(salt)
 
-    return '{SSHA}' + base64.encodestring(hash.digest() + salt).rstrip()
+    return '{SHA}' + base64.encodestring(hash.digest()).rstrip()
 
 
 def normalizeName(name):
diff -up MoinMoin/web/contexts.py.orig MoinMoin/web/contexts.py
--- MoinMoin/web/contexts.py.orig	2012-03-13 01:12:56.445855552 +0200
+++ MoinMoin/web/contexts.py	2012-03-13 01:13:35.365909957 +0200
@@ -218,6 +218,12 @@ class HTTPContext(BaseContext):
 
     # proxy further attribute lookups to the underlying request first
     def __getattr__(self, name):
+        if name == 'editlog':
+            if "editlog" not in self.__dict__:
+                from MoinMoin.logfile import editlog
+                self.request.rootpage = self.rootpage
+                self.editlog = editlog.EditLog(self.request)
+            return self.editlog
         try:
             return getattr(self.request, name)
         except AttributeError, e:
diff -up MoinMoin/xmlrpc/__init__.py.orig MoinMoin/xmlrpc/__init__.py
--- MoinMoin/xmlrpc/__init__.py.orig	2012-02-07 23:36:49.000000000 +0200
+++ MoinMoin/xmlrpc/__init__.py	2012-03-13 01:13:35.365909957 +0200
@@ -38,6 +38,32 @@ from MoinMoin.logfile import editlog
 from MoinMoin.action import AttachFile
 from MoinMoin import caching
 
+def is_login_required(request):
+    login_required = True
+    env = request.environ
+
+    from MoinMoin.auth import GivenAuth
+    from MoinMoin.auth.sslclientcert import SSLClientCertAuth
+
+    # Get all the authentication methods used in the config
+    auth = getattr(request.cfg, 'auth', [])
+
+    for method in auth:
+        # If we're using HTTP auth, and the server has authenticated
+        # the user successfully, do not require another login
+        if isinstance(method, GivenAuth):
+            if env.get('REMOTE_USER', ''):
+               login_required = False
+               break
+        # If we're using SSL client certificate auth, and the server
+        # has authenticated the user successfully, do not require
+        # another login
+        elif isinstance(method, SSLClientCertAuth):
+            if env.get('SSL_CLIENT_VERIFY', 'FAILURE') == 'SUCCESS':
+               login_required = False
+               break
+
+    return login_required
 
 logging_tearline = '- XMLRPC %s ' + '-' * 40
 
@@ -132,7 +158,12 @@ class XmlRpcBase:
             else:
                 # overwrite any user there might be, if you need a valid user for
                 # xmlrpc, you have to use multicall and getAuthToken / applyAuthToken
-                request.user = user.User(request, auth_method='xmlrpc:invalid')
+                login_required = is_login_required(self.request)
+                if (not self.request.user or
+                    not self.request.user.valid or
+                    login_required):
+                    self.request.user = user.User(self.request, 
+                                                  auth_method='xmlrpc:invalid')
 
                 data = request.read()
 
@@ -767,7 +798,14 @@ class XmlRpcBase:
         request.session = request.cfg.session_service.get_session(request)
 
         u = auth.setup_from_session(request, request.session)
-        u = auth.handle_login(request, u, username=username, password=password)
+
+        login_required = is_login_required(request)
+
+        if login_required:
+            u = auth.handle_login(request, u, username=username, 
+                                  password=password)
+        else:
+            u = request.user
 
         if u and u.valid:
             request.user = u
