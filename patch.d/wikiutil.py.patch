--- ./MoinMoin/wikiutil.py.orig	2016-10-31 22:44:02.000000000 +0200
+++ ./MoinMoin/wikiutil.py	2016-12-02 15:09:35.147408158 +0200
@@ -12,7 +12,7 @@
 
 import cgi
 import codecs
-import hmac
+import hmac, hashlib
 import os
 import re
 import time
@@ -471,15 +471,15 @@ def load_wikimap(request):
         generate_file_list(request)
 
     try:
-        _interwiki_list = request.cfg.cache.interwiki_list
-        old_mtime = request.cfg.cache.interwiki_mtime
-        if request.cfg.cache.interwiki_ts + (1*60) < now: # 1 minutes caching time
+        _interwiki_list = request.cfg.cache.interwiki_list[request.user.id]
+        old_mtime = request.cfg.cache.interwiki_mtime[request.user.id]
+        if request.cfg.cache.interwiki_ts[request.user.id] + (1*60) < now: # 1 minutes caching time
             max_mtime = get_max_mtime(request.cfg.shared_intermap_files, Page(request, INTERWIKI_PAGE))
             if max_mtime > old_mtime:
                 raise AttributeError # refresh cache
             else:
-                request.cfg.cache.interwiki_ts = now
-    except AttributeError:
+                request.cfg.cache.interwiki_ts[request.user.id] = now
+    except (AttributeError, KeyError):
         _interwiki_list = {}
         lines = []
 
@@ -509,10 +509,28 @@ def load_wikimap(request):
         if request.cfg.interwikiname:
             _interwiki_list[request.cfg.interwikiname] = request.script_root + '/'
 
+        # collab list
+        if hasattr(request.cfg, 'collab_basedir'):
+            from collabbackend import listCollabs
+            user = request.user.name
+            active = request.cfg.interwikiname
+            path = request.cfg.collab_basedir
+            baseurl = request.cfg.collab_baseurl
+            collablist = listCollabs(baseurl, user, path, active)
+
+            for collab in collablist:
+                _interwiki_list[collab[0]] = collab[3]
+
         # save for later
-        request.cfg.cache.interwiki_list = _interwiki_list
-        request.cfg.cache.interwiki_ts = now
-        request.cfg.cache.interwiki_mtime = get_max_mtime(request.cfg.shared_intermap_files, Page(request, INTERWIKI_PAGE))
+        if not getattr(request.cfg.cache, 'interwiki_list', None):
+            request.cfg.cache.interwiki_list = dict()
+        if not getattr(request.cfg.cache, 'interwiki_ts', None):
+            request.cfg.cache.interwiki_ts = dict()
+        if not getattr(request.cfg.cache, 'interwiki_mtime', None):
+            request.cfg.cache.interwiki_mtime = dict()
+        request.cfg.cache.interwiki_list[request.user.id] = _interwiki_list
+        request.cfg.cache.interwiki_ts[request.user.id] = now
+        request.cfg.cache.interwiki_mtime[request.user.id] = get_max_mtime(request.cfg.shared_intermap_files, Page(request, INTERWIKI_PAGE))
 
     return _interwiki_list
 
@@ -2269,7 +2287,7 @@ def taintfilename(basename):
     """
     # note: filenames containing ../ (or ..\) are made safe by replacing
     # the / (or the \). the .. will be kept, but is harmless then.
-    basename = re.sub('[\x00-\x1f:/\\\\<>"*?%|]', '_', basename)
+    basename = re.sub('[\x00-\x1f:/\\\\<>"*?|]', '_', basename)
     return basename
 
 
@@ -2530,7 +2548,7 @@ def createTicket(request, tm=None, actio
         hmac_data.append(value)
 
     h = hmac.new(request.cfg.secrets['wikiutil/tickets'],
-                 ''.join(hmac_data))
+                 ''.join(hmac_data), digestmod=hashlib.sha1)
     return "%s.%s" % (tm, h.hexdigest())
 
 
